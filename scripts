// Matrix Rain Canvas
const canvas = document.getElementById('matrix-canvas');
const ctx = canvas.getContext('2d');

canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

const katakana = 'アカサタナハマヤラワ0123456789#$%&@';
const columns = canvas.width / 14;
const drops = Array(Math.floor(columns)).fill(1);

function drawMatrix() {
  ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
  ctx.fillRect(0, 0, canvas.width, canvas.height);
  ctx.fillStyle = '#00ff00';
  ctx.font = '14px monospace';

  for (let i = 0; i < drops.length; i++) {
    const char = katakana.charAt(Math.floor(Math.random() * katakana.length));
    ctx.fillText(char, i * 14, drops[i] * 14);
    drops[i]++;
    if (drops[i] * 14 > canvas.height && Math.random() > 0.975) drops[i] = 0;
  }
}

setInterval(drawMatrix, 40);

// Handle tab switching with animation
const buttons = document.querySelectorAll('.tab-button');
const sections = document.querySelectorAll('.tab-content');

buttons.forEach(button => {
  button.addEventListener('click', () => {
    // Matrix burst on switch
    canvas.style.opacity = 1;
    setTimeout(() => canvas.style.opacity = 0, 700);

    buttons.forEach(btn => btn.classList.remove('active'));
    button.classList.add('active');

    const target = button.dataset.tab;

    sections.forEach(sec => {
      sec.classList.remove('active');
      if (sec.id === target) sec.classList.add('active');
    });
  });
});
